"""add oauth fields to user

Revision ID: a1b2c3d4e5f6
Revises: e7805b27a0d1
Create Date: 2025-01-22 12:00:00.000000

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a1b2c3d4e5f6"
down_revision: Union[str, None] = "e7805b27a0d1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add OAuth and authentication fields to users table
    op.add_column("users", sa.Column("full_name", sa.String(), nullable=True))
    op.add_column(
        "users", sa.Column("is_verified", sa.Boolean(), nullable=True, default=False)
    )
    op.add_column("users", sa.Column("google_id", sa.String(), nullable=True))
    op.add_column(
        "users", sa.Column("provider", sa.String(), nullable=True, default="local")
    )
    op.add_column("users", sa.Column("avatar_url", sa.String(), nullable=True))
    op.add_column("users", sa.Column("created_at", sa.DateTime(), nullable=True))
    op.add_column("users", sa.Column("last_login", sa.DateTime(), nullable=True))

    # Make email required and ensure hashed_password can be null for OAuth users
    op.alter_column("users", "email", nullable=False)
    op.alter_column("users", "hashed_password", nullable=True)

    # Create unique index for google_id
    op.create_index(op.f("ix_users_google_id"), "users", ["google_id"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove the added columns and indexes
    op.drop_index(op.f("ix_users_google_id"), table_name="users")
    op.drop_column("users", "last_login")
    op.drop_column("users", "created_at")
    op.drop_column("users", "avatar_url")
    op.drop_column("users", "provider")
    op.drop_column("users", "google_id")
    op.drop_column("users", "is_verified")
    op.drop_column("users", "full_name")

    # Revert email and password column changes
    op.alter_column("users", "email", nullable=True)
    op.alter_column("users", "hashed_password", nullable=True)
    # ### end Alembic commands ###
